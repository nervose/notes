一.准备工作：
   安装3台HyperV虚拟机，参考：https://blog.csdn.net/u012963756/article/details/77900484
   开放端口，参考：https://www.jianshu.com/p/bad33004bb4f
   常见问题解决：https://www.codetd.com/article/1993778#linux-%E9%97%AE%E9%A2%98  important
   安装教程：https://kubernetes.io/docs/setup/independent/install-kubeadm/#verify-the-mac-address-and-product-uuid-are-unique-for-every-node
   设置代理：
        export http_proxy=http://192.168.1.3:1080    
        export https_proxy=http://192.168.1.3:1080
        export no_proxy="127.0.0.1, 192.168.1.0, 10.0.0.0"
        docker代理: (参考 https://zhuanlan.zhihu.com/p/26050119)
            mkdir -p /etc/systemd/system/docker.service.d
            sudo echo 'Environment="HTTP_PROXY=http://192.168.1.3:1080/" "HTTPS_PROXY=https://192.168.1.3:1080/"' > /etc/systemd/system/docker.service.d/http-proxy.conf
            sudo sed -i "1i[Service]" /etc/systemd/system/docker.service.d/http-proxy.conf
            sudo systemctl daemon-reload
            systemctl show --property=Environment docker #查看配置是否起效
            sudo systemctl restart docker
    开放端口
        sudo firewall-cmd --zone=public --add-port=6443/tcp --permanent
        sudo firewall-cmd --zone=public --add-port=10250/tcp --permanent
        sudo firewall-cmd --reload
        firewall-cmd --list-all  #查看是否起效

    将kubernetes的安全授权文件配置到kubectl下
        mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config
    部署网络插件
        kubectl apply -f https://git.io/weave-kube-1.6
    kubectl补全
        yum install bash-completion  #需要重启终端
        source <(kubectl completion bash)
    dashboard相关
        参考：http://blog.51cto.com/newfly/2105892
查看日志专用：
    journalctl -f -u kubelet



chmod +x /etc/rc.d/rc.local
iptables -I INPUT -s 192.168.1.0/24 -j ACCEPT
iptables -I FORWARD -j ACCEPT
echo 'iptables -I INPUT -s 192.168.1.0/24 -j ACCEPT' >> /etc/rc.d/rc.local
echo 'iptables -I FORWARD -j ACCEPT' >> /etc/rc.d/rc.local


坑：
    1.通过克隆方式创建虚拟机导致/sys/class/dmi/id/product_uuid均一样，且难以修改 https://kubernetes.io/docs/setup/independent/install-kubeadm/
    2.报错：
        Failed to get system container stats for "/system.slice/kubelet.service": failed to get cgroup stats for "/system.slice/kubelet.service": failed to get container info for "/system.slice/kubelet.service": unknown container "/system.slice/kubelet.service"
        参考：http://blog.51cto.com/ygqygq2/2153241  
        Container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized
        参考：https://blog.csdn.net/andriy_dangli/article/details/79269348          （systemctl daemon-reload  systemctl restart kubelet）
        Error response from daemon: shim error: docker-runc not installed on system
        参考：https://blog.csdn.net/u012891504/article/details/77481603?locationNum=6&fps=1

Your Kubernetes master has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of machines by running the following on each node
as root:

kubeadm join 192.168.1.21:6443 --token 5jwpn4.gw5yc7go0vpabube --discovery-token-ca-cert-hash sha256:4d83974fcef3918211e59523af474863a0c49dbec6220383685f83ff2a64a7ae